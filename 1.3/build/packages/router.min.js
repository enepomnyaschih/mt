var Application=function(){Application._super.call(this);this.router=null};JW.extend(Application,JW.UI.Component,{beforeRender:function(a){this._super();this.router=this.own(new JW.Plugins.Router({path:JW.UI.hash,handler:{routes:{inbox:function(){return new Inbox()},compose:function(){return new Compose()},settings:function(){return new Settings()},"":function(){return new JW.UI.Component()}},notFound:function(b){return new NotFound(b)}},scope:this}))},renderUrlForm:function(a){a.jwon("submit",function(b){b.preventDefault();location.hash="#"+this.getElement("url").val()},this)},renderUrl:function(a){this.own(new JW.UI.ValueUpdater(a,JW.UI.hash))},renderPage:function(){return this.router.target},renderRoute:function(a){this.own(new JW.Switcher([this.router.route],{init:function(b){a.filter('[href="#'+b+'"]').attr("data-route",b).removeAttr("href")},done:function(b){a.filter('[data-route="'+b+'"]').attr("href","#"+b).removeAttr("data-route")},scope:this}))}});JW.UI.template(Application,{main:'<div jwclass="application"><div jwid="header"><h1>Application header</h1><form jwid="url-form"><b>Current URL hash:</b> #<input type="text" jwid="url"> <input type="submit" value="Change now!"></form><div><b>Pages:</b> <a jwid="route" href="#inbox">Inbox</a> | <a jwid="route" href="#compose">Compose</a> | <a jwid="route" href="#settings">Settings</a></div></div><div jwid="page"></div></div>'});var Compose=function(){Compose._super.call(this)};JW.extend(Compose,JW.UI.Component);JW.UI.template(Compose,{main:'<textarea jwclass="compose" cols="80" rows="5">Compose email! (honestly, this text area has no real purpose)</textarea>'});var Email=function(a){Email._super.call(this);this.email=a};JW.extend(Email,JW.UI.Component,{renderSummary:function(a){a.text(this.email.summary)},renderContent:function(a){a.html(this.email.content)}});JW.UI.template(Email,{main:'<div jwclass="email"><h3 jwid="summary"></h3><div jwid="content"></div><div><a href="#inbox">Back</a></div></div>'});var EmailList=function(a){EmailList._super.call(this);this.emails=a};JW.extend(EmailList,JW.UI.Component,{renderRoot:function(a){a.addClass("email-list");return this.own(this.emails.$$mapObjects(function(b){return new EmailListItem(b)},this))}});var EmailListItem=function(a){EmailListItem._super.call(this);this.email=a};JW.extend(EmailListItem,JW.UI.Component,{renderRoot:function(a){a.text(this.email.summary).attr("href","#inbox/"+this.email.id)}});JW.UI.template(EmailListItem,{main:'<a jwclass="email-list-item" style="display: block;"></a>'});var EmailNotFound=function(a){EmailNotFound._super.call(this);this.id=a};JW.extend(EmailNotFound,JW.UI.Component,{renderId:function(a){a.text(this.id)}});JW.UI.template(EmailNotFound,{main:'<div jwclass="email-not-found"><div>Email with id <span jwid="id"></span> is not found</div><div><a href="#inbox">Back</a></div></div>'});var Inbox=function(){Inbox._super.call(this);this.path=this.own(new JW.Property());this.emails=new JW.Array([{id:"1",summary:"About router",content:"Hello there! jWidget Router is quite simple but powerful, isn't it?"},{id:"2",summary:"Router documentation",content:'Router documentation is <a href="http://enepomnyaschih.github.io/jwidget#!/api/JW.Plugins.Router" target="_blank">here</a>'}])};JW.extend(Inbox,JW.UI.Component,{renderContent:function(){return this.own(new JW.Plugins.Router({path:this.path,handler:function(b){if(!b){return new EmailList(this.emails)}var a=this.emails.search(JW.byValue("id",b));return(a!=null)?new Email(a):new EmailNotFound(b)},scope:this})).target},setPath:function(a){this.path.set(a)}});JW.UI.template(Inbox,{main:'<div jwclass="inbox"><h2>Inbox</h2><div jwid="content"></div></div>'});var NotFound=function(a){NotFound._super.call(this);this.route=a};JW.extend(NotFound,JW.UI.Component,{renderRoot:function(a){a.text('The requested page "'+this.route+'" is not found')}});var Settings=function(){Settings._super.call(this)};JW.extend(Settings,JW.UI.Component);JW.UI.template(Settings,{main:'<div jwclass="settings">There\'s nothing to configure!</div>'});var application;jQuery(function(){application=new Application().renderTo("body")});